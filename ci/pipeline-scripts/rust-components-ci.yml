# SPDX-FileCopyrightText: 2022 Yureka Lilian <yuka@yuka.dev>
#
# SPDX-License-Identifier: AGPL-3.0-or-later WITH LicenseRef-AppStore

# Script that triggers the pipelines for rust-components of `irdest`

####################### RATMAN ROUTER

build-ratman:
  tags: [ irdest-nix ]
  stage: build
  needs: [ build-ratman-dashboard ]
  script:
    - nix-build nix -A ratmand

build-ratman-static:
  tags: [ irdest-nix ]
  stage: build
  needs: [ build-ratman-dashboard ]
  script:
    - nix-env -iA cachix -f https://cachix.org/api/v1/install
    - cachix use irdest -O ~/.config/nix
    - nix-build nix -A pkgsStatic.buildPackages.rustc.all -A pkgsStatic.buildPackages.cargo -o toolchain
    - cachix push irdest ./toolchain* || echo "couldn't push"
    - nix-build nix -A pkgsStatic.ratman -o result-ratman
  artifacts:
    paths:
      - result-ratman/*

build-ratman-static-aarch64:
  tags: [ irdest-nix ]
  stage: build
  needs: [ build-ratman-dashboard ]
  script:
    - nix-env -iA cachix -f https://cachix.org/api/v1/install
    - cachix use irdest -O ~/.config/nix
    - nix-build nix -A pkgsCross.aarch64-multiplatform.pkgsStatic.stdenv -A pkgsCross.aarch64-multiplatform.pkgsStatic.buildPackages.rustc.all -A pkgsCross.aarch64-multiplatform.pkgsStatic.buildPackages.cargo -o toolchain
    - cachix push irdest ./toolchain* || echo "couldn't push"
    - nix-build nix -A pkgsCross.aarch64-multiplatform.pkgsStatic.ratman -o result-ratman
  artifacts:
    paths:
      - result-ratman/*

####################### IRDEST PROXY

build-irdest-proxy-static:
  tags: [ irdest-nix ]
  stage: build
  script:
    - nix-env -iA cachix -f https://cachix.org/api/v1/install
    - cachix use irdest
    - nix-build nix -A pkgsStatic.buildPackages.rustc -A pkgsStatic.buildPackages.cargo -o toolchain
    - cachix push irdest ./toolchain* || echo "couldn't push"
    - nix-build nix -A pkgsStatic.irdest-proxy -o result-irdest-proxy
  artifacts:
    paths:
      - result-irdest-proxy/*

build-irdest-proxy-static-aarch64:
  tags: [ irdest-nix ]
  stage: build
  script:
    - nix-env -iA cachix -f https://cachix.org/api/v1/install
    - cachix use irdest
    - nix-build nix -A pkgsCross.aarch64-multiplatform.pkgsStatic.stdenv -A pkgsCross.aarch64-multiplatform.pkgsStatic.buildPackages.rustc -A pkgsCross.aarch64-multiplatform.pkgsStatic.buildPackages.cargo -o toolchain
    - cachix push irdest ./toolchain* || echo "couldn't push"
    - nix-build nix -A pkgsCross.aarch64-multiplatform.pkgsStatic.irdest-proxy -o result-irdest-proxy
  artifacts:
    paths:
      - result-irdest-proxy/*

####################### IRDEST MBLOG

build-irdest-mblog:
  tags: [ irdest-nix ]
  stage: build
  script:
    - nix-build nix -A irdest-mblog

####################### IRDEST INSTALLER

build-installer-static:
  tags: [ irdest-nix ]
  stage: build
  script:
    - nix-env -iA cachix -f https://cachix.org/api/v1/install
    - cachix use irdest -O ~/.config/nix
    - nix-build nix -A pkgsStatic.buildPackages.rustc.all -A pkgsStatic.buildPackages.cargo -o toolchain
    - cachix push irdest ./toolchain* || echo "couldn't push"
    - nix-build nix -A pkgsStatic.irdest-installer -o result-installer
  artifacts:
    paths:
      - result-installer/*

build-installer-static-aarch64:
  tags: [ irdest-nix ]
  stage: build
  script:
    - nix-env -iA cachix -f https://cachix.org/api/v1/install
    - cachix use irdest -O ~/.config/nix
    - nix-build nix -A pkgsCross.aarch64-multiplatform.pkgsStatic.stdenv -A pkgsCross.aarch64-multiplatform.pkgsStatic.buildPackages.rustc.all -A pkgsCross.aarch64-multiplatform.pkgsStatic.buildPackages.cargo -o toolchain
    - cachix push irdest ./toolchain* || echo "couldn't push"
    - nix-build nix -A pkgsCross.aarch64-multiplatform.pkgsStatic.irdest-installer -o result-installer
  artifacts:
    paths:
      - result-installer/*
